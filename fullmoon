-- Ki·ªÉm tra Full Moon trong Blox Fruits v√† auto hop server
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- H√†m ki·ªÉm tra Full Moon
function isFullMoon()
    local Lighting = game:GetService("Lighting")
    return Lighting:FindFirstChild("FullMoon") ~= nil
end

-- H√†m l·∫•y danh s√°ch server
function getServers()
    local servers = {}
    local placeID = game.PlaceId
    local url = "https://games.roblox.com/v1/games/" .. placeID .. "/servers/Public?sortOrder=Desc&limit=100"
    
    local success, response = pcall(function()
        return HttpService:JSONDecode(game:HttpGet(url))
    end)

    if success and response and response.data then
        for _, server in ipairs(response.data) do
            if server.playing < server.maxPlayers then
                table.insert(servers, server.id)
            end
        end
    end

    return servers
end

-- H√†m t·ª± ƒë·ªông hop server
function autoHop()
    if isFullMoon() then
        print("üåï Full Moon ƒë√£ xu·∫•t hi·ªán! D·ª´ng hop server.")
        return
    end

    print("üîÑ ƒêang t√¨m server c√≥ Full Moon...")
    local servers = getServers()
    
    for _, serverID in ipairs(servers) do
        print("üöÄ ƒêang chuy·ªÉn server...")
        TeleportService:TeleportToPlaceInstance(game.PlaceId, serverID, LocalPlayer)
        wait(10) -- ƒê·ª£i ƒë·ªÉ load game
        if isFullMoon() then
            print("‚úÖ ƒê√£ t√¨m th·∫•y server c√≥ Full Moon!")
            return
        end
    end

    print("‚ùå Kh√¥ng t√¨m th·∫•y Full Moon, th·ª≠ l·∫°i...")
    wait(5)
    autoHop() -- L·∫∑p l·∫°i n·∫øu ch∆∞a t√¨m th·∫•y
end

-- Ch·∫°y script
autoHop()
